0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.0.0
3 info using node@v0.11.14
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add spec="." args=[".",null]
7 verbose parsed spec { raw: '.',
7 verbose parsed spec   scope: null,
7 verbose parsed spec   name: null,
7 verbose parsed spec   rawSpec: '.',
7 verbose parsed spec   spec: '/private/var/www/nimble',
7 verbose parsed spec   type: 'local' }
8 verbose cache add local package /private/var/www/nimble
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/charlie/.npm/3a52ce78-.lock
11 verbose tar pack [ '/Users/charlie/.npm/nimbleservice/0.0.7/package.tgz', '.' ]
12 verbose tarball /Users/charlie/.npm/nimbleservice/0.0.7/package.tgz
13 verbose folder .
14 info prepublish nimbleservice@0.0.7
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /Users/charlie/.npm/1f1177db-tar.lock
17 silly lockFile ca488fa2--nimbleservice-0-0-7-package-tgz tar:///Users/charlie/.npm/nimbleservice/0.0.7/package.tgz
18 verbose lock tar:///Users/charlie/.npm/nimbleservice/0.0.7/package.tgz /Users/charlie/.npm/ca488fa2--nimbleservice-0-0-7-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile ca488fa2--nimbleservice-0-0-7-package-tgz tar:///Users/charlie/.npm/nimbleservice/0.0.7/package.tgz
22 silly lockFile ca488fa2--nimbleservice-0-0-7-package-tgz tar:///Users/charlie/.npm/nimbleservice/0.0.7/package.tgz
23 silly lockFile a95f1677--npm-nimbleservice-0-0-7-package /Users/charlie/.npm/nimbleservice/0.0.7/package
24 verbose lock /Users/charlie/.npm/nimbleservice/0.0.7/package /Users/charlie/.npm/a95f1677--npm-nimbleservice-0-0-7-package.lock
25 silly lockFile a95f1677--npm-nimbleservice-0-0-7-package /Users/charlie/.npm/nimbleservice/0.0.7/package
26 silly lockFile a95f1677--npm-nimbleservice-0-0-7-package /Users/charlie/.npm/nimbleservice/0.0.7/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'nimbleservice',
29 silly publish   version: '0.0.7',
29 silly publish   description: 'A node Js Framework for microservices, express and mongoose. API Only',
29 silly publish   main: './lib/index.js',
29 silly publish   author: { name: 'Charlie Mitchell' },
29 silly publish   license: 'MIT',
29 silly publish   bugs:
29 silly publish    { url: 'http://github.com/charliemitchell/nimble',
29 silly publish      email: 'charliesemailis@gmail.com' },
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'http://github.com/charliemitchell/nimble.git' },
29 silly publish   bin: { nimble: './bin/nimble.js' },
29 silly publish   dependencies:
29 silly publish    { 'body-parser': '^1.12.0',
29 silly publish      colors: '1.0.3',
29 silly publish      'cookie-parser': '^1.3.4',
29 silly publish      express: '3.x.x',
29 silly publish      lodash: '^3.2.0',
29 silly publish      'method-override': '^2.3.1',
29 silly publish      mongoose: '3.8.23',
29 silly publish      ncp: '^1.0.1',
29 silly publish      'node-redis': '^0.1.7',
29 silly publish      optimist: '^0.6.1',
29 silly publish      redis: '^0.12.1',
29 silly publish      sanitizer: '0.1.2' },
29 silly publish   readme: '\n# NIMBLE\n##### Currently this project is under heavy development. There are some major fixes coming soon.\nMore Docs Coming Soon.\n\n## Prerequisites\n* [Node.js](http://nodejs.org/) (with NPM)\n\n## Installation\n\n* `(sudo) npm install -g nimbleservice`\n\n## Running / Development\n\n*  to create a new nimble service \n*  * Create a Folder Named foo: `nimble new foo`\n*  * Go Inside the folder: `cd foo`\n*  * Generate a Service that listens to the route bar: `nimble api bar`\n*  * Start The Server: `nimble s`\n* Visit your app at [http://localhost:4242/bar](http://localhost:4242/bar).\n\n## Mimimal setup required...\n### Open your config file...\n```js\n    module.exports = {\n    \n        verbose : false,\n\n        reportGlobalVars : true,\n\n        port : 4242,  // What port should this service handle\n\n        bodyParser : \'json\', // What Kind of API is this [https://www.npmjs.com/package/body-parser]\n        \n        // Used For Session\n        redis : {\n          host: \'localhost\',\n          port: 6379,\n          key : \'sess:\' // <---- Change this to match your session key in redis\n        },\n        cookie : {\n          name : \'yourcookie.sid\',  // <---- Change this to match your cookie name\n        },\n        // MongoDB\n        mongodb : {\n            host : \'localhost\',\n            port : 27017,\n            database : \'yourdatabase\' // <!-- CHANGE THIS to match your database\n        },\n        \n        // CSRF\n        csrf : {\n            // Coming Soon\n        }\n\n    }\n```\n\n### Now Open Up your Model File \n(This will be pre-generated, all you have to do is define your model)\n\n```js\n    /*\n        Desription of Model\n        :: Boilerplate\n        About Mongoose :: mongoosejs.com\n    */\n    var mongoose = require(\'nimbleservice\').mongoose,\n        Schema = mongoose.Schema,\n        validator = require(\'nimbleservice\').validate,\n        setter = require(\'nimbleservice\').setter;\n    /* Edit Your Model Below */\n    \n    var Bar = new Schema({\n        // <--- Define your model in here\n        /* Example\n            name : {\n                type : String\n            },\n            address : {\n                type : String\n            }\n        */\n    });\n    \n    // This is put in for your convinience (_id to id)\n    Bar.virtual(\'id\').get(function(){\n        return this._id.toHexString();\n    });\n    \n    Bar.set(\'toJSON\', {\n        virtuals: true\n    });\n\n    mongoose.model(\'Bar\', Bar);\n    module.exports = mongoose.model(\'Bar\');\n```\n\n### Lastly Setup your Policy,\n(this is also pre-generated)\n```js\nmodule.exports = {\n    \n    onFailure : function (req, res) {\n        res.json({auth : false, error : "Not Logged In"});\n    },\n\n    authenticated : function (req, res) {\n        if (req.session) {\n            if (req.session.loggedin) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n};\n```\n\n\n### AT this point your up and running and have A Fully functioning REST SERVICE\n\n\n\n\n## GITHUB\n* [nimbleservice](http://github.com/charliemitchell/mikros) ',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: 'c5384d2f5471c204566602de36002ed5f69620fa',
29 silly publish   homepage: 'https://github.com/charliemitchell/nimble',
29 silly publish   _id: 'nimbleservice@0.0.7',
29 silly publish   scripts: {},
29 silly publish   _shasum: '8f7fcb3e0cb9386ef40ea1418e5cdb2600cf6b26',
29 silly publish   _from: '.' }
30 verbose mapToRegistry name nimbleservice
31 verbose mapToRegistry uri https://registry.npmjs.org/nimbleservice
32 verbose publish registryBase https://registry.npmjs.org/
33 verbose request on initialization, where is /nimbleservice
34 verbose request after pass 1, where is /nimbleservice
35 verbose request url raw /nimbleservice
36 verbose request resolving registry [ 'https://registry.npmjs.org/', './nimbleservice' ]
37 verbose request after pass 2, where is https://registry.npmjs.org/nimbleservice
38 verbose request sending authorization for write operation
39 info attempt registry request try #1 at 16:50:41
40 verbose request id a4f3d42e33ad357b
41 http request PUT https://registry.npmjs.org/nimbleservice
42 http 403 https://registry.npmjs.org/nimbleservice
43 verbose headers { date: 'Tue, 24 Feb 2015 00:50:39 GMT',
43 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
43 verbose headers   'content-type': 'application/json',
43 verbose headers   'cache-control': 'max-age=60',
43 verbose headers   'content-length': '6712',
43 verbose headers   'accept-ranges': 'bytes',
43 verbose headers   via: '1.1 varnish',
43 verbose headers   'x-served-by': 'cache-iad2143-IAD',
43 verbose headers   'x-cache': 'MISS',
43 verbose headers   'x-cache-hits': '0',
43 verbose headers   'x-timer': 'S1424739039.017933,VS0,VE393',
43 verbose headers   connection: 'close' }
44 error publish Failed PUT 403
45 verbose stack Error: forbidden cannot modify pre-existing version: 0.0.7
45 verbose stack old={"name":"nimbleservice","version":"0.0.7","description":"A node Js Framework for microservices, express and mongoose. API Only","main":"./lib/index.js","author":{"name":"Charlie Mitchell"},"license":"MIT","bugs":{"url":"http://github.com/charliemitchell/nimble","email":"charliesemailis@gmail.com"},"repository":{"type":"git","url":"http://github.com/charliemitchell/nimble.git"},"bin":{"nimble":"./bin/nimble.js"},"dependencies":{"body-parser":"^1.12.0","colors":"1.0.3","cookie-parser":"^1.3.4","express":"3.x.x","lodash":"^3.2.0","method-override":"^2.3.1","mongoose":"3.8.23","ncp":"^1.0.1","node-redis":"^0.1.7","optimist":"^0.6.1","redis":"^0.12.1","sanitizer":"0.1.2"},"gitHead":"71f35c7e7fad7804ed10584fb56fab2f532f72e2","homepage":"https://github.com/charliemitchell/nimble","_id":"nimbleservice@0.0.7","scripts":{},"_shasum":"72b8c5e91129912f71424ec60933e36e7757deb7","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"charliemitchell","email":"charliesemailis@gmail.com"},"maintainers":[{"name":"charliemitchell","email":"charliesemailis@gmail.com"}],"dist":{"shasum":"72b8c5e91129912f71424ec60933e36e7757deb7","tarball":"http://registry.npmjs.org/nimbleservice/-/nimbleservice-0.0.7.tgz"}}
45 verbose stack new={"name":"nimbleservice","version":"0.0.7","description":"A node Js Framework for microservices, express and mongoose. API Only","main":"./lib/index.js","author":{"name":"Charlie Mitchell"},"license":"MIT","bugs":{"url":"http://github.com/charliemitchell/nimble","email":"charliesemailis@gmail.com"},"repository":{"type":"git","url":"http://github.com/charliemitchell/nimble.git"},"bin":{"nimble":"./bin/nimble.js"},"dependencies":{"body-parser":"^1.12.0","colors":"1.0.3","cookie-parser":"^1.3.4","express":"3.x.x","lodash":"^3.2.0","method-override":"^2.3.1","mongoose":"3.8.23","ncp":"^1.0.1","node-redis":"^0.1.7","optimist":"^0.6.1","redis":"^0.12.1","sanitizer":"0.1.2"},"readme":"\u000a# NIMBLE\u000a##### Currently this project is under heavy development. There are some major fixes coming soon.\u000aMore Docs Coming Soon.\u000a\u000a## Prerequisites\u000a* [Node.js](http://nodejs.org/) (with NPM)\u000a\u000a## Installation\u000a\u000a* `(sudo) npm install -g nimbleservice`\u000a\u000a## Running / Development\u000a\u000a*  to create a new nimble service \u000a*  * Create a Folder Named foo: `nimble new foo`\u000a*  * Go Inside the folder: `cd foo`\u000a*  * Generate a Service that listens to the route bar: `nimble api bar`\u000a*  * Start The Server: `nimble s`\u000a* Visit your app at [http://localhost:4242/bar](http://localhost:4242/bar).\u000a\u000a## Mimimal setup required...\u000a### Open your config file...\u000a```js\u000a    module.exports = {\u000a    \u000a        verbose : false,\u000a\u000a        reportGlobalVars : true,\u000a\u000a        port : 4242,  // What port should this service handle\u000a\u000a        bodyParser : 'json', // What Kind of API is this [https://www.npmjs.com/package/body-parser]\u000a        \u000a        // Used For Session\u000a        redis : {\u000a          host: 'localhost',\u000a          port: 6379,\u000a          key : 'sess:' // <---- Change this to match your session key in redis\u000a        },\u000a        cookie : {\u000a          name : 'yourcookie.sid',  // <---- Change this to match your cookie name\u000a        },\u000a        // MongoDB\u000a        mongodb : {\u000a            host : 'localhost',\u000a            port : 27017,\u000a            database : 'yourdatabase' // <!-- CHANGE THIS to match your database\u000a        },\u000a        \u000a        // CSRF\u000a        csrf : {\u000a            // Coming Soon\u000a        }\u000a\u000a    }\u000a```\u000a\u000a### Now Open Up your Model File \u000a(This will be pre-generated, all you have to do is define your model)\u000a\u000a```js\u000a    /*\u000a        Desription of Model\u000a        :: Boilerplate\u000a        About Mongoose :: mongoosejs.com\u000a    */\u000a    var mongoose = require('nimbleservice').mongoose,\u000a        Schema = mongoose.Schema,\u000a        validator = require('nimbleservice').validate,\u000a        setter = require('nimbleservice').setter;\u000a    /* Edit Your Model Below */\u000a    \u000a    var Bar = new Schema({\u000a        // <--- Define your model in here\u000a        /* Example\u000a            name : {\u000a                type : String\u000a            },\u000a            address : {\u000a                type : String\u000a            }\u000a        */\u000a    });\u000a    \u000a    // This is put in for your convinience (_id to id)\u000a    Bar.virtual('id').get(function(){\u000a        return this._id.toHexString();\u000a    });\u000a    \u000a    Bar.set('toJSON', {\u000a        virtuals: true\u000a    });\u000a\u000a    mongoose.model('Bar', Bar);\u000a    module.exports = mongoose.model('Bar');\u000a```\u000a\u000a### Lastly Setup your Policy,\u000a(this is also pre-generated)\u000a```js\u000amodule.exports = {\u000a    \u000a    onFailure : function (req, res) {\u000a        res.json({auth : false, error : \"Not Logged In\"});\u000a    },\u000a\u000a    authenticated : function (req, res) {\u000a        if (req.session) {\u000a            if (req.session.loggedin) {\u000a                return true;\u000a            } else {\u000a                return false;\u000a            }\u000a        } else {\u000a            return false;\u000a        }\u000a    }\u000a};\u000a```\u000a\u000a\u000a### AT this point your up and running and have A Fully functioning REST SERVICE\u000a\u000a\u000a\u000a\u000a## GITHUB\u000a* [nimbleservice](http://github.com/charliemitchell/mikros) ","readmeFilename":"README.md","gitHead":"c5384d2f5471c204566602de36002ed5f69620fa","homepage":"https://github.com/charliemitchell/nimble","_id":"nimbleservice@0.0.7","scripts":{},"_shasum":"8f7fcb3e0cb9386ef40ea1418e5cdb2600cf6b26","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"charliemitchell","email":"charliesemailis@gmail.com"},"maintainers":[{"name":"charliemitchell","email":"charliesemailis@gmail.com"}],"dist":{"shasum":"8f7fcb3e0cb9386ef40ea1418e5cdb2600cf6b26","tarball":"http://registry.npmjs.org/nimbleservice/-/nimbleservice-0.0.7.tgz"}}: nimbleservice
45 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:261:14)
45 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:198:65)
45 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
45 verbose stack     at Request.emit (events.js:110:17)
45 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
45 verbose stack     at Request.emit (events.js:129:20)
45 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
45 verbose stack     at IncomingMessage.emit (events.js:129:20)
45 verbose stack     at _stream_readable.js:907:16
45 verbose stack     at process._tickCallback (node.js:372:11)
46 verbose statusCode 403
47 verbose pkgid nimbleservice
48 verbose cwd /private/var/www/nimble
49 error Darwin 14.0.0
50 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
51 error node v0.11.14
52 error npm  v2.0.0
53 error code E403
54 error forbidden cannot modify pre-existing version: 0.0.7
54 error old={"name":"nimbleservice","version":"0.0.7","description":"A node Js Framework for microservices, express and mongoose. API Only","main":"./lib/index.js","author":{"name":"Charlie Mitchell"},"license":"MIT","bugs":{"url":"http://github.com/charliemitchell/nimble","email":"charliesemailis@gmail.com"},"repository":{"type":"git","url":"http://github.com/charliemitchell/nimble.git"},"bin":{"nimble":"./bin/nimble.js"},"dependencies":{"body-parser":"^1.12.0","colors":"1.0.3","cookie-parser":"^1.3.4","express":"3.x.x","lodash":"^3.2.0","method-override":"^2.3.1","mongoose":"3.8.23","ncp":"^1.0.1","node-redis":"^0.1.7","optimist":"^0.6.1","redis":"^0.12.1","sanitizer":"0.1.2"},"gitHead":"71f35c7e7fad7804ed10584fb56fab2f532f72e2","homepage":"https://github.com/charliemitchell/nimble","_id":"nimbleservice@0.0.7","scripts":{},"_shasum":"72b8c5e91129912f71424ec60933e36e7757deb7","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"charliemitchell","email":"charliesemailis@gmail.com"},"maintainers":[{"name":"charliemitchell","email":"charliesemailis@gmail.com"}],"dist":{"shasum":"72b8c5e91129912f71424ec60933e36e7757deb7","tarball":"http://registry.npmjs.org/nimbleservice/-/nimbleservice-0.0.7.tgz"}}
54 error new={"name":"nimbleservice","version":"0.0.7","description":"A node Js Framework for microservices, express and mongoose. API Only","main":"./lib/index.js","author":{"name":"Charlie Mitchell"},"license":"MIT","bugs":{"url":"http://github.com/charliemitchell/nimble","email":"charliesemailis@gmail.com"},"repository":{"type":"git","url":"http://github.com/charliemitchell/nimble.git"},"bin":{"nimble":"./bin/nimble.js"},"dependencies":{"body-parser":"^1.12.0","colors":"1.0.3","cookie-parser":"^1.3.4","express":"3.x.x","lodash":"^3.2.0","method-override":"^2.3.1","mongoose":"3.8.23","ncp":"^1.0.1","node-redis":"^0.1.7","optimist":"^0.6.1","redis":"^0.12.1","sanitizer":"0.1.2"},"readme":"\u000a# NIMBLE\u000a##### Currently this project is under heavy development. There are some major fixes coming soon.\u000aMore Docs Coming Soon.\u000a\u000a## Prerequisites\u000a* [Node.js](http://nodejs.org/) (with NPM)\u000a\u000a## Installation\u000a\u000a* `(sudo) npm install -g nimbleservice`\u000a\u000a## Running / Development\u000a\u000a*  to create a new nimble service \u000a*  * Create a Folder Named foo: `nimble new foo`\u000a*  * Go Inside the folder: `cd foo`\u000a*  * Generate a Service that listens to the route bar: `nimble api bar`\u000a*  * Start The Server: `nimble s`\u000a* Visit your app at [http://localhost:4242/bar](http://localhost:4242/bar).\u000a\u000a## Mimimal setup required...\u000a### Open your config file...\u000a```js\u000a    module.exports = {\u000a    \u000a        verbose : false,\u000a\u000a        reportGlobalVars : true,\u000a\u000a        port : 4242,  // What port should this service handle\u000a\u000a        bodyParser : 'json', // What Kind of API is this [https://www.npmjs.com/package/body-parser]\u000a        \u000a        // Used For Session\u000a        redis : {\u000a          host: 'localhost',\u000a          port: 6379,\u000a          key : 'sess:' // <---- Change this to match your session key in redis\u000a        },\u000a        cookie : {\u000a          name : 'yourcookie.sid',  // <---- Change this to match your cookie name\u000a        },\u000a        // MongoDB\u000a        mongodb : {\u000a            host : 'localhost',\u000a            port : 27017,\u000a            database : 'yourdatabase' // <!-- CHANGE THIS to match your database\u000a        },\u000a        \u000a        // CSRF\u000a        csrf : {\u000a            // Coming Soon\u000a        }\u000a\u000a    }\u000a```\u000a\u000a### Now Open Up your Model File \u000a(This will be pre-generated, all you have to do is define your model)\u000a\u000a```js\u000a    /*\u000a        Desription of Model\u000a        :: Boilerplate\u000a        About Mongoose :: mongoosejs.com\u000a    */\u000a    var mongoose = require('nimbleservice').mongoose,\u000a        Schema = mongoose.Schema,\u000a        validator = require('nimbleservice').validate,\u000a        setter = require('nimbleservice').setter;\u000a    /* Edit Your Model Below */\u000a    \u000a    var Bar = new Schema({\u000a        // <--- Define your model in here\u000a        /* Example\u000a            name : {\u000a                type : String\u000a            },\u000a            address : {\u000a                type : String\u000a            }\u000a        */\u000a    });\u000a    \u000a    // This is put in for your convinience (_id to id)\u000a    Bar.virtual('id').get(function(){\u000a        return this._id.toHexString();\u000a    });\u000a    \u000a    Bar.set('toJSON', {\u000a        virtuals: true\u000a    });\u000a\u000a    mongoose.model('Bar', Bar);\u000a    module.exports = mongoose.model('Bar');\u000a```\u000a\u000a### Lastly Setup your Policy,\u000a(this is also pre-generated)\u000a```js\u000amodule.exports = {\u000a    \u000a    onFailure : function (req, res) {\u000a        res.json({auth : false, error : \"Not Logged In\"});\u000a    },\u000a\u000a    authenticated : function (req, res) {\u000a        if (req.session) {\u000a            if (req.session.loggedin) {\u000a                return true;\u000a            } else {\u000a                return false;\u000a            }\u000a        } else {\u000a            return false;\u000a        }\u000a    }\u000a};\u000a```\u000a\u000a\u000a### AT this point your up and running and have A Fully functioning REST SERVICE\u000a\u000a\u000a\u000a\u000a## GITHUB\u000a* [nimbleservice](http://github.com/charliemitchell/mikros) ","readmeFilename":"README.md","gitHead":"c5384d2f5471c204566602de36002ed5f69620fa","homepage":"https://github.com/charliemitchell/nimble","_id":"nimbleservice@0.0.7","scripts":{},"_shasum":"8f7fcb3e0cb9386ef40ea1418e5cdb2600cf6b26","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"charliemitchell","email":"charliesemailis@gmail.com"},"maintainers":[{"name":"charliemitchell","email":"charliesemailis@gmail.com"}],"dist":{"shasum":"8f7fcb3e0cb9386ef40ea1418e5cdb2600cf6b26","tarball":"http://registry.npmjs.org/nimbleservice/-/nimbleservice-0.0.7.tgz"}}: nimbleservice
55 error If you need help, you may report this error at:
55 error     <http://github.com/npm/npm/issues>
56 verbose exit [ 1, true ]
